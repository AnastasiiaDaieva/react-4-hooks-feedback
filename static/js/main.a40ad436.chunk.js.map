{"version":3,"sources":["components/FeedbackOptions/FeedbackOptions.module.css","components/Statistics/Statistics.module.css","components/Feedback/Feedback.module.css","components/FeedbackOptions/FeedbackOptions.jsx","components/Notification/Notification.jsx","components/Statistics/Statistics.jsx","components/Section/Section.jsx","components/Feedback/Feedback.jsx","App.js","index.js"],"names":["module","exports","FeedbackOptions","options","incrementFunc","className","s","FeedbackOptions__list","map","color","id","value","FeedbackOptions__item","onClick","type","FeedbackOptions__button","Notification","message","Statistics","good","bad","neutral","total","positivePercentage","Statistics__list","Section","title","children","Feedback","useState","setGood","setNeutral","setBad","totalNumber","positivePerc","Math","round","feedbackTypes","option","state","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yHACAA,EAAOC,QAAU,CAAC,gBAAgB,UAAU,aAAa,UAAU,YAAY,UAAU,sBAAwB,+CAA+C,wBAA0B,iDAAiD,sBAAwB,+CAA+C,KAAO,6EAA6E,MAAQ,8EAA8E,IAAM,8E,kBCAleD,EAAOC,QAAU,CAAC,WAAa,+BAA+B,iBAAmB,uC,8LCAjFD,EAAOC,QAAU,CAAC,SAAW,6B,6JCI7B,SAASC,EAAT,GAAsD,IAA3BC,EAA0B,EAA1BA,QAASC,EAAiB,EAAjBA,cAClC,OACE,oBAAIC,UAAWC,IAAEC,sBAAjB,SACGJ,EAAQK,KAAI,YAA2B,IAAxBC,EAAuB,EAAvBA,MAAOC,EAAgB,EAAhBA,GAAIC,EAAY,EAAZA,MACzB,OACE,oBAEEN,UAAWC,IAAEM,sBACbC,QAAS,kBAAMT,EAAcO,IAH/B,SAKE,wBACEG,KAAK,SACLT,WAAYC,IAAES,wBAAyBT,IAAEG,IAF3C,SAIGE,KARED,QCTjB,SAASM,EAAT,GAAoC,IAAZC,EAAW,EAAXA,QACtB,OAAO,4BAAIA,I,oBCGb,SAASC,EAAT,GAAwE,IAAlDC,EAAiD,EAAjDA,KAAMC,EAA2C,EAA3CA,IAAKC,EAAsC,EAAtCA,QAASC,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,mBAC/C,OACE,mCACGD,EAAQ,EACP,qBAAKjB,UAAWC,IAAEY,WAAlB,SACE,qBAAIb,UAAWC,IAAEkB,iBAAjB,UACE,qBAAenB,UAAU,mBAAzB,mBACSc,IADD,QAGR,qBAAed,UAAU,mBAAzB,sBACYgB,IADJ,QAGR,qBAAehB,UAAU,mBAAzB,kBACQe,IADA,QAGR,qBAAef,UAAU,mBAAzB,oBACUiB,IADF,QAGR,qBAAejB,UAAU,mBAAzB,uBACakB,EADb,MAAQ,aAMZ,cAACP,EAAD,CAAcC,QAAQ,wB,2BC1B9B,SAASQ,EAAT,GAAkD,IAA/BpB,EAA8B,EAA9BA,UAAWqB,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACnC,OACE,0BAAStB,UAAWC,IAAEsB,SAAtB,UACE,oBAAIvB,UAAWA,EAAf,SAA2BqB,IAC1BC,KCFP,SAASC,IACP,IA2BwCN,EA3BxC,EAAwBO,mBAAS,GAAjC,mBAAOV,EAAP,KAAaW,EAAb,KACA,EAA8BD,mBAAS,GAAvC,mBAAOR,EAAP,KAAgBU,EAAhB,KACA,EAAsBF,mBAAS,GAA/B,mBAAOT,EAAP,KAAYY,EAAZ,KA8BMC,EATUd,EAAOE,EAAUD,EAW3Bc,GAPkCZ,EAOaW,EANpCE,KAAKC,MAAOjB,EAAOG,EAAS,MAQ7C,OACE,qCACE,cAACG,EAAD,CAASC,MAAM,6BAA6BrB,UAAU,WAAtD,SACE,cAACH,EAAD,CACEC,QAASkC,EACTjC,cArCgB,SAAAkC,GACtB,OAAQA,GACN,IAAK,OACHR,GAAQ,SAAAS,GAAK,OAAIA,EAAQ,KACzB,MAEF,IAAK,UACHR,GAAW,SAAAQ,GAAK,OAAIA,EAAQ,KAC5B,MACF,IAAK,MACHP,GAAO,SAAAO,GAAK,OAAIA,EAAQ,KACxB,MAEF,QACE,aA0BF,cAACd,EAAD,CAASC,MAAM,aAAarB,UAAU,sBAAtC,SACE,cAACa,EAAD,CACEC,KAAMA,EACNE,QAASA,EACTD,IAAKA,EACLE,MAAOW,EACPV,mBAAoBW,SC9CfM,MARf,WACE,OACE,qBAAKnC,UAAU,MAAf,SACE,cAACuB,EAAD,OCDNa,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.a40ad436.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"neutral-color\":\"#70C6DD\",\"good-color\":\"#009C3E\",\"bad-color\":\"#B32000\",\"FeedbackOptions__list\":\"FeedbackOptions_FeedbackOptions__list__3UJ5U\",\"FeedbackOptions__button\":\"FeedbackOptions_FeedbackOptions__button__33Hy4\",\"FeedbackOptions__item\":\"FeedbackOptions_FeedbackOptions__item__15ILk\",\"blue\":\"FeedbackOptions_blue__25UWp FeedbackOptions_FeedbackOptions__button__33Hy4\",\"green\":\"FeedbackOptions_green__2ICCX FeedbackOptions_FeedbackOptions__button__33Hy4\",\"red\":\"FeedbackOptions_red__3n6K8 FeedbackOptions_FeedbackOptions__button__33Hy4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Statistics\":\"Statistics_Statistics__1W8_j\",\"Statistics__list\":\"Statistics_Statistics__list__2z0-o\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Feedback\":\"Feedback_Feedback__2PCMh\"};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport s from './FeedbackOptions.module.css';\r\n\r\nfunction FeedbackOptions({ options, incrementFunc }) {\r\n  return (\r\n    <ul className={s.FeedbackOptions__list}>\r\n      {options.map(({ color, id, value }) => {\r\n        return (\r\n          <li\r\n            key={id}\r\n            className={s.FeedbackOptions__item}\r\n            onClick={() => incrementFunc(value)}\r\n          >\r\n            <button\r\n              type=\"button\"\r\n              className={(s.FeedbackOptions__button, s[color])}\r\n            >\r\n              {value}\r\n            </button>\r\n          </li>\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n}\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.array.isRequired,\r\n  incrementFunc: PropTypes.func,\r\n  color: PropTypes.string,\r\n  id: PropTypes.string,\r\n  value: PropTypes.string,\r\n};\r\n\r\nexport { FeedbackOptions };\r\n","import React from 'react';\r\n\r\nfunction Notification({ message }) {\r\n  return <p>{message}</p>;\r\n}\r\n\r\nexport { Notification };\r\n","import React from 'react';\r\nimport { Notification } from 'components/Notification/Notification';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport s from './Statistics.module.css';\r\n\r\nfunction Statistics({ good, bad, neutral, total, positivePercentage }) {\r\n  return (\r\n    <>\r\n      {total > 0 ? (\r\n        <div className={s.Statistics}>\r\n          <ul className={s.Statistics__list}>\r\n            <li key=\"id-1\" className=\"Statistics__item\">\r\n              Good: {good}\r\n            </li>\r\n            <li key=\"id-2\" className=\"Statistics__item\">\r\n              Neutral: {neutral}\r\n            </li>\r\n            <li key=\"id-3\" className=\"Statistics__item\">\r\n              Bad: {bad}\r\n            </li>\r\n            <li key=\"id-4\" className=\"Statistics__item\">\r\n              Total: {total}\r\n            </li>\r\n            <li key=\"id-5\" className=\"Statistics__item\">\r\n              Positive: {positivePercentage}%\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      ) : (\r\n        <Notification message=\"No feedback given\" />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number,\r\n  bad: PropTypes.number,\r\n  neutral: PropTypes.number,\r\n  total: PropTypes.number,\r\n  positivePercentage: PropTypes.number,\r\n};\r\n\r\nexport { Statistics };\r\n","import React from 'react';\r\nimport s from 'components/Feedback/Feedback.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction Section({ className, title, children }) {\r\n  return (\r\n    <section className={s.Feedback}>\r\n      <h2 className={className}>{title}</h2>\r\n      {children}\r\n    </section>\r\n  );\r\n}\r\n\r\nSection.propTypes = {\r\n  className: PropTypes.string,\r\n  title: PropTypes.string,\r\n  children: PropTypes.any,\r\n};\r\n\r\nexport { Section };\r\n","import React, { Component, useState } from 'react';\r\nimport { FeedbackOptions } from 'components/FeedbackOptions/FeedbackOptions';\r\nimport { Statistics } from 'components/Statistics/Statistics';\r\nimport feedbackTypes from 'data/feedbackTypes.json';\r\nimport { Section } from 'components/Section/Section';\r\n\r\nfunction Feedback() {\r\n  const [good, setGood] = useState(0);\r\n  const [neutral, setNeutral] = useState(0);\r\n  const [bad, setBad] = useState(0);\r\n\r\n  const handleIncrement = option => {\r\n    switch (option) {\r\n      case 'good':\r\n        setGood(state => state + 1);\r\n        break;\r\n\r\n      case 'neutral':\r\n        setNeutral(state => state + 1);\r\n        break;\r\n      case 'bad':\r\n        setBad(state => state + 1);\r\n        break;\r\n\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const countTotalFeedback = () => {\r\n    const total = good + neutral + bad;\r\n    return total;\r\n  };\r\n\r\n  const countPositiveFeedbackPercentage = total => {\r\n    const result = Math.round((good / total) * 100);\r\n    return result;\r\n  };\r\n\r\n  const totalNumber = countTotalFeedback();\r\n\r\n  const positivePerc = countPositiveFeedbackPercentage(totalNumber);\r\n\r\n  return (\r\n    <>\r\n      <Section title=\"Please leave your feedback\" className=\"Feedback\">\r\n        <FeedbackOptions\r\n          options={feedbackTypes}\r\n          incrementFunc={handleIncrement}\r\n        />\r\n      </Section>\r\n      <Section title=\"Statistics\" className=\"Statistics__heading\">\r\n        <Statistics\r\n          good={good}\r\n          neutral={neutral}\r\n          bad={bad}\r\n          total={totalNumber}\r\n          positivePercentage={positivePerc}\r\n        />\r\n      </Section>\r\n    </>\r\n  );\r\n}\r\n\r\nexport { Feedback };\r\n","import './App.css';\r\nimport { Feedback } from 'components/Feedback/Feedback';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Feedback />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}